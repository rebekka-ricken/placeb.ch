/**
 * angular2-google-maps - Angular2 components for Google Maps
 * @version v0.6.1
 * @link https://github.com/SebastianM/angular2-google-maps#readme
 * @license MIT
 */
{"version":3,"sources":["services/google-maps-api-wrapper.ts"],"names":["GoogleMapsAPIWrapper","GoogleMapsAPIWrapper.constructor","GoogleMapsAPIWrapper.createMap","GoogleMapsAPIWrapper.setMapOptions","GoogleMapsAPIWrapper.createMarker","GoogleMapsAPIWrapper.subscribeToMapEvent","GoogleMapsAPIWrapper.setCenter","GoogleMapsAPIWrapper.getZoom","GoogleMapsAPIWrapper.setZoom","GoogleMapsAPIWrapper.getCenter"],"mappings":"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","file":"services/google-maps-api-wrapper.js","sourcesContent":["import {Injectable, NgZone} from 'angular2/core';\nimport {Observer} from 'rxjs/Observer';\nimport {Observable} from 'rxjs/Observable';\n\nimport {MapsAPILoader} from './maps-api-loader/maps-api-loader';\nimport * as mapTypes from './google-maps-types';\n\n// todo: add types for this\ndeclare var google: any;\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\n@Injectable()\nexport class GoogleMapsAPIWrapper {\n  private _map: Promise<mapTypes.GoogleMap>;\n  private _mapResolver: (value?: mapTypes.GoogleMap) => void;\n\n  constructor(private _loader: MapsAPILoader, private _zone: NgZone) {\n    this._map =\n        new Promise<mapTypes.GoogleMap>((resolve: () => void) => { this._mapResolver = resolve; });\n  }\n\n  createMap(el: HTMLElement, mapOptions: mapTypes.MapOptions): Promise<void> {\n    return this._loader.load().then(() => {\n      const map = new google.maps.Map(el, mapOptions);\n      this._mapResolver(<mapTypes.GoogleMap>map);\n      return;\n    });\n  }\n\n  setMapOptions(options: mapTypes.MapOptions) {\n    this._map.then((m: mapTypes.GoogleMap) => { m.setOptions(options); });\n  }\n\n  /**\n   * Creates a google map marker with the map context\n   */\n  createMarker(options: mapTypes.MarkerOptions = <mapTypes.MarkerOptions>{}):\n      Promise<mapTypes.Marker> {\n    return this._map.then((map: mapTypes.GoogleMap) => {\n      options.map = map;\n      return new google.maps.Marker(options);\n    });\n  }\n\n  subscribeToMapEvent<E>(eventName: string): Observable<E> {\n    return Observable.create((observer: Observer<E>) => {\n      this._map.then((m: mapTypes.GoogleMap) => {\n        m.addListener(eventName, (arg: E) => { this._zone.run(() => observer.next(arg)); });\n      });\n    });\n  }\n\n  setCenter(latLng: mapTypes.LatLngLiteral): Promise<void> {\n    return this._map.then((map: mapTypes.GoogleMap) => map.setCenter(latLng));\n  }\n\n  getZoom(): Promise<number> { return this._map.then((map: mapTypes.GoogleMap) => map.getZoom()); }\n\n  setZoom(zoom: number): Promise<void> {\n    return this._map.then((map: mapTypes.GoogleMap) => map.setZoom(zoom));\n  }\n\n  getCenter(): Promise<mapTypes.LatLng> {\n    return this._map.then((map: mapTypes.GoogleMap) => map.getCenter());\n  }\n}\n"],"sourceRoot":"/source/"}